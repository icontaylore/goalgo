package main

import "fmt"

func main() { // O(n^3)
	// Определяем массив arr
	n := 5
	arr := []int{0, 1, 2, 1, 4}

	// Переменная для подсчета совпадений
	end := 0

	// Внешний цикл: перебираем срезы массива arr от arr[:1] до arr[:n]
	for i := 1; i <= n; i++ {
		// Создаем срез arr[:i] и сортируем его с помощью функции buble
		arr2 := buble(arr[:i])

		// Переменная для вычисления суммы элементов среза
		res := 0

		// Внутренний цикл: суммируем элементы среза, исключая первый и последний
		for j := 1; j < len(arr2)-1; j++ {
			res += arr2[j] // Суммируем элементы с индексами с 1 до len(arr2)-2
		}

		// Проверяем, совпала ли сумма с первым элементом исходного массива arr
		if arr[0] == res {
			end++ // Увеличиваем счетчик совпадений
		}

		// Выводим отсортированный срез arr2, количество совпадений и сумму
		fmt.Println(arr2, end, res)
	}
}

// Функция пузырьковой сортировки, которая сортирует срез по убыванию
func buble(arr []int) []int {
	// Внешний цикл сортировки пузырьком
	for i := 0; i < len(arr); i++ {
		// Внутренний цикл для сравнения и обмена элементов
		for j := 0; j < len(arr)-1; j++ {
			// Если текущий элемент меньше следующего, меняем их местами
			if arr[j] < arr[j+1] {
				arr[j], arr[j+1] = arr[j+1], arr[j]
			}
		}
	}
	// Возвращаем отсортированный срез
	return arr

}
